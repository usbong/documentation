{\rtf1\ansi\ansicpg1252\uc1\deff0\stshfdbch11\stshfloch0\stshfhich0\stshfbi0\deflang4105\deflangfe1041{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}{\f11\fmodern\fcharset128\fprq1{\*\panose 02020609040205080304}MS Mincho{\*\falt \'82\'6c\'82\'72 \'96\'be\'92\'a9};}
{\f36\fmodern\fcharset128\fprq1{\*\panose 02020609040205080304}@MS Mincho;}{\f37\froman\fcharset238\fprq2 Times New Roman CE;}{\f38\froman\fcharset204\fprq2 Times New Roman Cyr;}{\f40\froman\fcharset161\fprq2 Times New Roman Greek;}
{\f41\froman\fcharset162\fprq2 Times New Roman Tur;}{\f42\froman\fcharset177\fprq2 Times New Roman (Hebrew);}{\f43\froman\fcharset178\fprq2 Times New Roman (Arabic);}{\f44\froman\fcharset186\fprq2 Times New Roman Baltic;}
{\f45\froman\fcharset163\fprq2 Times New Roman (Vietnamese);}{\f47\fswiss\fcharset238\fprq2 Arial CE;}{\f48\fswiss\fcharset204\fprq2 Arial Cyr;}{\f50\fswiss\fcharset161\fprq2 Arial Greek;}{\f51\fswiss\fcharset162\fprq2 Arial Tur;}
{\f52\fswiss\fcharset177\fprq2 Arial (Hebrew);}{\f53\fswiss\fcharset178\fprq2 Arial (Arabic);}{\f54\fswiss\fcharset186\fprq2 Arial Baltic;}{\f55\fswiss\fcharset163\fprq2 Arial (Vietnamese);}{\f57\fmodern\fcharset238\fprq1 Courier New CE;}
{\f58\fmodern\fcharset204\fprq1 Courier New Cyr;}{\f60\fmodern\fcharset161\fprq1 Courier New Greek;}{\f61\fmodern\fcharset162\fprq1 Courier New Tur;}{\f62\fmodern\fcharset177\fprq1 Courier New (Hebrew);}
{\f63\fmodern\fcharset178\fprq1 Courier New (Arabic);}{\f64\fmodern\fcharset186\fprq1 Courier New Baltic;}{\f65\fmodern\fcharset163\fprq1 Courier New (Vietnamese);}
{\f149\fmodern\fcharset0\fprq1 MS Mincho Western{\*\falt \'82\'6c\'82\'72 \'96\'be\'92\'a9};}{\f147\fmodern\fcharset238\fprq1 MS Mincho CE{\*\falt \'82\'6c\'82\'72 \'96\'be\'92\'a9};}
{\f148\fmodern\fcharset204\fprq1 MS Mincho Cyr{\*\falt \'82\'6c\'82\'72 \'96\'be\'92\'a9};}{\f150\fmodern\fcharset161\fprq1 MS Mincho Greek{\*\falt \'82\'6c\'82\'72 \'96\'be\'92\'a9};}
{\f151\fmodern\fcharset162\fprq1 MS Mincho Tur{\*\falt \'82\'6c\'82\'72 \'96\'be\'92\'a9};}{\f154\fmodern\fcharset186\fprq1 MS Mincho Baltic{\*\falt \'82\'6c\'82\'72 \'96\'be\'92\'a9};}{\f399\fmodern\fcharset0\fprq1 @MS Mincho Western;}
{\f397\fmodern\fcharset238\fprq1 @MS Mincho CE;}{\f398\fmodern\fcharset204\fprq1 @MS Mincho Cyr;}{\f400\fmodern\fcharset161\fprq1 @MS Mincho Greek;}{\f401\fmodern\fcharset162\fprq1 @MS Mincho Tur;}{\f404\fmodern\fcharset186\fprq1 @MS Mincho Baltic;}}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;
\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 
\fs24\lang4105\langfe1041\loch\f0\hich\af0\dbch\af11\cgrid\langnp4105\langfenp1041 \snext0 Normal;}{\*\cs10 \additive \ssemihidden Default Paragraph Font;}{\*
\ts11\tsrowd\trftsWidthB3\trpaddl108\trpaddr108\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\trcbpat1\trcfpat1\tscellwidthfts0\tsvertalt\tsbrdrt\tsbrdrl\tsbrdrb\tsbrdrr\tsbrdrdgl\tsbrdrdgr\tsbrdrh\tsbrdrv 
\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1024\langfe1024\cgrid\langnp1024\langfenp1024 \snext11 \ssemihidden Normal Table;}}{\*\latentstyles\lsdstimax156\lsdlockeddef0}{\*\rsidtbl \rsid6775612\rsid14241592
\rsid15038995}{\*\generator Microsoft Word 11.0.5604;}{\info{\author Owner}{\operator Owner}{\creatim\yr2008\mo2\dy1\hr11\min5}{\revtim\yr2008\mo2\dy1\hr11\min8}{\version4}{\edmins3}{\nofpages6}{\nofwords1295}{\nofchars7384}{\nofcharsws8662}{\vern24689}}
\widowctrl\ftnbj\aenddoc\noxlattoyen\expshrtn\noultrlspc\dntblnsbdb\nospaceforul\hyphcaps0\horzdoc\dghspace120\dgvspace120\dghorigin1701\dgvorigin1984\dghshow0\dgvshow3\jcompress\viewkind4\viewscale100\nolnhtadjtbl\rsidroot14241592 \fet0\sectd 
\linex0\sectdefaultcl\sftnbj {\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl4
\pnlcltr\pnstart1\pnindent720\pnhang {\pntxta )}}{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang {\pntxtb (}
{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}\pard\plain \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 
\fs24\lang4105\langfe1041\loch\af0\hich\af0\dbch\af11\cgrid\langnp4105\langfenp1041 {\f1\fs20\insrsid15038995 \hich\af1\dbch\af11\loch\f1 //create a frame in Flash, and put this code as part of the action
\par \hich\af1\dbch\af11\loch\f1 import syson.*; //name of the folder where the actionScript files can be found
\par 
\par \hich\af1\dbch\af11\loch\f1 //you must have a .as file that has the name "AngAkingEngine"
\par \hich\af1\dbch\af11\loch\f1 var myEngine:AngAkingEngine =\hich\af1\dbch\af11\loch\f1  new AngAkingEngine();
\par \hich\af1\dbch\af11\loch\f1 addChild(myEngine);
\par 
\par 
\par \hich\af1\dbch\af11\loch\f1 addEventListener(Event.ENTER_FRAME, onEnterFrame);
\par \hich\af1\dbch\af11\loch\f1 //main function
\par \hich\af1\dbch\af11\loch\f1 function onEnterFrame(event:Event):void
\par \{
\par \tab \hich\af1\dbch\af11\loch\f1 myEngine.update();
\par \}
\par }\pard \ql \li0\ri0\nowidctlpar\brdrb\brdrs\brdrw15\brsp20 \faauto\rin0\lin0\itap0 {\f1\fs20\insrsid15038995 
\par }\pard \ql \li0\ri-1440\nowidctlpar\tx10080\faauto\rin-1440\lin0\itap0 {\f1\fs20\insrsid15038995 
\par \hich\af1\dbch\af11\loch\f1 ------------------------------
\par \hich\af1\dbch\af11\loch\f1 Rocky's code for collision detection
\par 
\par \tab \tab 
\par \hich\af1\dbch\af11\loch\f1 public\hich\af1\dbch\af11\loch\f1  function checkStatus():void\tab \tab 
\par \{\tab \tab \tab 
\par \hich\af1\dbch\af11\loch\f1   if(infected == 0)
\par \hich\af1\dbch\af11\loch\f1   \{
\par \hich\af1\dbch\af11\loch\f1     for(var i:int = 0; i < 50; i++)
\par \hich\af1\dbch\af11\loch\f1     \{
\par \hich\af1\dbch\af11\loch\f1       if(Main.beings[i] != this)
\par \hich\af1\dbch\af11\loch\f1       \{
\par \hich\af1\dbch\af11\loch\f1         if(this.hitTestObject(Main.beings[i]))
\par \hich\af1\dbch\af11\loch\f1         \{
\par \hich\af1\dbch\af11\loch\f1           if(Main.beings[i].infected == 1)
\par \hich\af1\dbch\af11\loch\f1           \{
\par \hich\af1\dbch\af11\loch\f1             infected = 1;
\par \hich\af1\dbch\af11\loch\f1             this.gotoAndPlay("zombie");
\par \hich\af1\dbch\af11\loch\f1           \}
\par \hich\af1\dbch\af11\loch\f1         \}
\par \hich\af1\dbch\af11\loch\f1       \}
\par \hich\af1\dbch\af11\loch\f1     \}
\par \hich\af1\dbch\af11\loch\f1   \}
\par \}
\par 
\par \hich\af1\dbch\af11\loch\f1 //Mike's code (in C++)
\par }\pard \ql \li0\ri-1440\nowidctlpar\faauto\rin-1440\lin0\itap0 {\f2\fs20\cf2\lang13321\langfe1041\langnp13321\insrsid15038995 \hich\af2\dbch\af11\loch\f2 void}{\f2\fs20\lang13321\langfe1041\langnp13321\insrsid15038995 \hich\af2\dbch\af11\loch\f2 
 MyDynamicObject::collideWith(MyDynamicObject* mdo)
\par \{
\par \hich\af2\dbch\af11\loch\f2     }{\f2\fs20\cf2\lang13321\langfe1041\langnp13321\insrsid15038995 \hich\af2\dbch\af11\loch\f2 if}{\f2\fs20\lang13321\langfe1041\langnp13321\insrsid15038995 \hich\af2\dbch\af11\loch\f2 
 ((!checkIsCollidable())||(!mdo->checkIsCollidable()))    
\par \hich\af2\dbch\af11\loch\f2     \{
\par \hich\af2\dbch\af11\loch\f2         }{\f2\fs20\cf2\lang13321\langfe1041\langnp13321\insrsid15038995 \hich\af2\dbch\af11\loch\f2 return}{\f2\fs20\lang13321\langfe1041\langnp13321\insrsid15038995 \hich\af2\dbch\af11\loch\f2 ;
\par \hich\af2\dbch\af11\loch\f2     \}
\par 
\par \hich\af2\dbch\af11\loch\f2     //change this to this.hitTestObject(mdo)       
\par \hich\af2\dbch\af11\loch\f2     }{\f2\fs20\cf2\lang13321\langfe1041\langnp13321\insrsid15038995 \hich\af2\dbch\af11\loch\f2 if}{\f2\fs20\lang13321\langfe1041\langnp13321\insrsid15038995 \hich\af2\dbch\af11\loch\f2  (isIntersectingRect(}{
\f2\fs20\cf2\lang13321\langfe1041\langnp13321\insrsid15038995 \hich\af2\dbch\af11\loch\f2 this}{\f2\fs20\lang13321\langfe1041\langnp13321\insrsid15038995 \hich\af2\dbch\af11\loch\f2 , mdo))
\par \hich\af2\dbch\af11\loch\f2     \{
\par \hich\af2\dbch\af11\loch\f2         }{\f2\fs20\cf2\lang13321\langfe1041\langnp13321\insrsid15038995 \hich\af2\dbch\af11\loch\f2 this}{\f2\fs20\lang13321\langfe1041\langnp13321\insrsid15038995 \hich\af2\dbch\af11\loch\f2 ->hitBy(mdo);
\par \hich\af2\dbch\af11\loch\f2         mdo->hitBy(}{\f2\fs20\cf2\lang13321\langfe1041\langnp13321\insrsid15038995 \hich\af2\dbch\af11\loch\f2 this}{\f2\fs20\lang13321\langfe1041\langnp13321\insrsid15038995 \hich\af2\dbch\af11\loch\f2 );
\par \hich\af2\dbch\af11\loch\f2     \}
\par \}
\par }\pard \ql \li0\ri-1440\nowidctlpar\tx10080\faauto\rin-1440\lin0\itap0 {\f1\fs20\insrsid15038995 
\par \hich\af1\dbch\af11\loch\f1 //possible contents of hitBy(...)
\par }\pard \ql \li0\ri-1440\nowidctlpar\faauto\rin-1440\lin0\itap0 {\f2\fs20\cf2\lang13321\langfe1041\langnp13321\insrsid15038995 \hich\af2\dbch\af11\loch\f2 void}{\f2\fs20\lang13321\langfe1041\langnp13321\insrsid15038995 \hich\af2\dbch\af11\loch\f2 
 Asteroid::hitBy(MyDynamicObject* mdo)
\par \{
\par \tab \hich\af2\dbch\af11\loch\f2 explosion = sound->load_sound_clip(EXPLOSIONSOUND);
\par \tab \hich\af2\dbch\af11\loch\f2 sound->play_sound_clip(explosion);
\par \hich\af2\dbch\af11\loch\f2     setCollidable(}{\f2\fs20\cf2\lang13321\langfe1041\langnp13321\insrsid15038995 \hich\af2\dbch\af11\loch\f2 false}{\f2\fs20\lang13321\langfe1041\langnp13321\insrsid15038995 \hich\af2\dbch\af11\loch\f2 );
\par \hich\af2\dbch\af11\loch\f2     myOpenGLCanvas->addScore(myScoreValue);      
\par \hich\af2\dbch\af11\loch\f2     changeState(DEATH_STATE);
\par 
\par \hich\af2\dbch\af11\loch\f2     }{\f2\fs20\cf2\lang13321\langfe1041\langnp13321\insrsid15038995 \hich\af2\dbch\af11\loch\f2 if}{\f2\fs20\lang13321\langfe1041\langnp13321\insrsid15038995 \hich\af2\dbch\af11\loch\f2  ((currentSta\hich\af2\dbch\af11\loch\f2 
tus==PARENT_STATUS) || (currentStatus==CHILD_STATUS))
\par \hich\af2\dbch\af11\loch\f2       initChildren();    
\par \}}{\f1\fs20\insrsid15038995 
\par }\pard \ql \li0\ri-1440\nowidctlpar\tx10080\faauto\rin-1440\lin0\itap0 {\f1\fs20\insrsid15038995 
\par \hich\af1\dbch\af11\loch\f1 -------------------------------
\par \hich\af1\dbch\af11\loch\f1 FOR Sound
\par \hich\af1\dbch\af11\loch\f1 //background sound
\par \hich\af1\dbch\af11\loch\f1 private var bgSound:Sound;
\par \hich\af1\dbch\af11\loch\f1 private var isSoundLoaded:Boolean=false;
\par \hich\af1\dbch\af11\loch\f1 private var bgSoundChannel:SoundChan\hich\af1\dbch\af11\loch\f1 nel;
\par \hich\af1\dbch\af11\loch\f1 private var bgSoundPausePosition:int;
\par 
\par \hich\af1\dbch\af11\loch\f1 //inside some function (ex: constructor)
\par \hich\af1\dbch\af11\loch\f1 bgSound = new Sound(new URLRequest("res/sound/bgSound.mp3"));//req);
\par \hich\af1\dbch\af11\loch\f1 bgSound.addEventListener(ProgressEvent.PROGRESS, onLoadProgress);
\par \hich\af1\dbch\af11\loch\f1 bgSound.addEventListener(Event.COMPLETE, onLoadComplete);
\par \hich\af1\dbch\af11\loch\f1 bgSound.addEventListener(IOErrorEvent.IO_ERROR, onIOError);
\par 
\par \hich\af1\dbch\af11\loch\f1 //other functions
\par \hich\af1\dbch\af11\loch\f1 //for sound
\par \hich\af1\dbch\af11\loch\f1 public function onLoadProgress(event:ProgressEvent):void
\par \{
\par }{\f1\fs20\insrsid14241592 \hich\af1\dbch\af11\loch\f1   }{\f1\fs20\insrsid15038995 \hich\af1\dbch\af11\loch\f1 var loadedPct:uint = Math.round(100\hich\af1\dbch\af11\loch\f1  * (event.bytesLoaded / event.bytesTotal));
\par }{\f1\fs20\insrsid14241592 \hich\af1\dbch\af11\loch\f1   }{\f1\fs20\insrsid15038995 \hich\af1\dbch\af11\loch\f1 //trace("The sound is " + loadedPct + "% loaded.");
\par }{\f1\fs20\insrsid14241592 \}}{\f1\fs20\insrsid15038995 
\par \tab \tab 
\par \hich\af1\dbch\af11\loch\f1 public function onLoadComplete(event:Event):void
\par \{
\par }{\f1\fs20\insrsid6775612 \hich\af1\dbch\af11\loch\f1   }{\f1\fs20\insrsid15038995 \hich\af1\dbch\af11\loch\f1 isSoundLoaded=true;
\par \tab \tab \tab 
\par }{\f1\fs20\insrsid6775612 \hich\af1\dbch\af11\loch\f1   }{\f1\fs20\insrsid15038995 \hich\af1\dbch\af11\loch\f1 var localSound:Sound = event.target as Sound;
\par }{\f1\fs20\insrsid6775612 \hich\af1\dbch\af11\loch\f1   }{\f1\fs20\insrsid15038995 \hich\af1\dbch\af11\loch\f1 bgSoundChannel =\hich\af1\dbch\af11\loch\f1 
 localSound.play(0, 1000); //sound is played zero second from the start of the sound, and 100 times (ala infinite)\tab \tab \tab 
\par \}
\par }{\f1\fs20\insrsid6775612 
\par }{\f1\fs20\insrsid15038995 \hich\af1\dbch\af11\loch\f1 public function onIOError(event:IOErrorEvent):void
\par \{
\par }{\f1\fs20\insrsid6775612 \hich\af1\dbch\af11\loch\f1   }{\f1\fs20\insrsid15038995 \hich\af1\dbch\af11\loch\f1 trace("The sound could not be loaded: " + event.text);
\par \}
\par 
\par \hich\af1\dbch\af11\loch\f1 //to pause sound
\par \hich\af1\dbch\af11\loch\f1 bgSoundPausePosition = bgSoundChannel.position;
\par \hich\af1\dbch\af11\loch\f1 bgSoundChannel.stop();
\par 
\par \hich\af1\dbch\af11\loch\f1 //to unpause sound
\par \hich\af1\dbch\af11\loch\f1 bgSoundChannel = bgSound.play(bgSoundPausePosition,1000);
\par 
\par \hich\af1\dbch\af11\loch\f1 //to play a different sound other than the paused sound (ex bgSound
\par \hich\af1\dbch\af11\loch\f1 bgSound\hich\af1\dbch\af11\loch\f1 Channel.stop();
\par \hich\af1\dbch\af11\loch\f1 //adding bgSoundChannel here is important so that this sound can be stopped
\par \hich\af1\dbch\af11\loch\f1 bgSoundChannel = bgSound.play(0, 1000);
\par \tab 
\par 
\par }\pard \ql \li0\ri0\nowidctlpar\brdrb\brdrs\brdrw15\brsp20 \faauto\rin0\lin0\itap0 {\f1\fs20\insrsid15038995 \hich\af1\dbch\af11\loch\f1 ----------------------------
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\f1\fs20\insrsid15038995 \hich\af1\dbch\af11\loch\f1 //note: in using progressBar, remember to press ctrl+F7 and put the progressBar from U\hich\af1\dbch\af11\loch\f1 ser Interface to your Library

\par \hich\af1\dbch\af11\loch\f1 //put stuff in package syson \{\}
\par 
\par \hich\af1\dbch\af11\loch\f1 //some files to import
\par \hich\af1\dbch\af11\loch\f1     import flash.display.MovieClip;
\par \hich\af1\dbch\af11\loch\f1     import flash.events.MouseEvent;
\par \hich\af1\dbch\af11\loch\f1     import flash.display.Loader;\tab 
\par \hich\af1\dbch\af11\loch\f1     import flash.net.URLRequest;
\par 
\par \hich\af1\dbch\af11\loch\f1     import fl.controls.Label; 
\par \hich\af1\dbch\af11\loch\f1     import fl.controls.ProgressBar;
\par \hich\af1\dbch\af11\loch\f1     import fl.controls.ProgressBarDirection;
\par \hich\af1\dbch\af11\loch\f1     import flash.events.ProgressEvent;
\par \hich\af1\dbch\af11\loch\f1     import flash.events.Event;
\par \hich\af1\dbch\af11\loch\f1     import flash.text.TextFieldAutoSize;
\par \hich\af1\dbch\af11\loch\f1     import flash.net.URLLoader;
\par \hich\af1\dbch\af11\loch\f1     import fl.containers.UILoad\hich\af1\dbch\af11\loch\f1 er;
\par 
\par \hich\af1\dbch\af11\loch\f1 //files to initiate for progressBar and sprite animation\tab \tab 
\par \tab \tab \hich\af1\dbch\af11\loch\f1 public var maxAnimationFrame:int=20; //20 frames 
\par \tab \tab \hich\af1\dbch\af11\loch\f1 public var animationFrameCounter:int=0
\par \tab \tab 
\par \tab \tab \hich\af1\dbch\af11\loch\f1 private var myContainer:MovieClip;
\par 
\par \tab \tab \hich\af1\dbch\af11\loch\f1 //this is the delay before animating sprite
\par \tab \tab \hich\af1\dbch\af11\loch\f1 private va\hich\af1\dbch\af11\loch\f1 r delayCounter:int=0;
\par \tab \tab \hich\af1\dbch\af11\loch\f1 private var delayMax:int=2;
\par 
\par \tab \tab \hich\af1\dbch\af11\loch\f1 private var myProgressBar:ProgressBar;
\par \tab \tab \hich\af1\dbch\af11\loch\f1 private var myLabel:Label;
\par \tab \tab 
\par \tab \tab \hich\af1\dbch\af11\loch\f1 //var myUILoader:UILoader;\tab \tab \tab 
\par 
\par 
\par \hich\af1\dbch\af11\loch\f1 //stuff in the contructor
\par \tab \tab \hich\af1\dbch\af11\loch\f1   x=myX;
\par \tab \tab \hich\af1\dbch\af11\loch\f1   y=myY;
\par \tab \tab \hich\af1\dbch\af11\loch\f1   myContainer = new MovieClip();
\par \tab \tab \hich\af1\dbch\af11\loch\f1   addChild(myContainer);
\par \hich\af1\dbch\af11\loch\f1   
\par \tab \tab \hich\af1\dbch\af11\loch\f1   loadAnimation();
\par 
\par \hich\af1\dbch\af11\loch\f1 //be sure to setXY\tab \tab 
\par 
\par 
\par \hich\af1\dbch\af11\loch\f1 //in update()
\par \tab \tab \tab \hich\af1\dbch\af11\loch\f1 if (delayCounter==0) \{
\par \tab \tab \tab \tab \hich\af1\dbch\af11\loch\f1 processAnimation();
\par \tab \tab \tab \}
\par \tab \tab \tab \hich\af1\dbch\af11\loch\f1 delayCounter = (delayCounter+1)%delayMax;
\par \tab \tab 
\par \hich\af1\dbch\af11\loch\f1 //do processAnimation
\par \tab \tab \tab \hich\af1\dbch\af11\loch\f1 trace(animationFrameCounter);
\par \tab \tab \tab \hich\af1\dbch\af11\loch\f1 if (anim\hich\af1\dbch\af11\loch\f1 ationFrameCounter==0) \{ //if counter has returned to the beginning of the array...
\par \tab \tab \tab \hich\af1\dbch\af11\loch\f1   myContainer.getChildAt(maxAnimationFrame-1).visible=false;
\par \tab \tab \tab \hich\af1\dbch\af11\loch\f1   myContainer.getChildAt(0).visible=true;
\par \tab \tab \tab \}\tab \tab \tab \tab \tab \tab 
\par 
\par \tab \tab \tab \hich\af1\dbch\af11\loch\f1 this.myContainer = myContainer;
\par 
\par \tab \tab \tab \hich\af1\dbch\af11\loch\f1 if (animation\hich\af1\dbch\af11\loch\f1 FrameCounter-1 >= 0)
\par \tab \tab \tab \tab \hich\af1\dbch\af11\loch\f1 myContainer.getChildAt(animationFrameCounter-1).visible=false;\tab \tab \tab 
\par \tab \tab \tab \hich\af1\dbch\af11\loch\f1 if (animationFrameCounter >= 0) \{\tab \tab \tab \tab 
\par \tab \tab \tab \tab \hich\af1\dbch\af11\loch\f1 myContainer.getChildAt(animationFrameCounter).visible=true;
\par \tab \tab \tab \}
\par \tab \tab \tab \hich\af1\dbch\af11\loch\f1 animationFrameCounter= (animationFrameCounter+1)%(maxAnimationFrame);\tab \tab \tab 
\par 
\par \hich\af1\dbch\af11\loch\f1 //how to load sprites (put in loadAnimation())
\par \tab \tab \hich\af1\dbch\af11\loch\f1   //var myProgressBar:ProgressBar = new ProgressBar();
\par \tab \tab \hich\af1\dbch\af11\loch\f1   myProgressBar = new ProgressBar();
\par \tab \tab \hich\af1\dbch\af11\loch\f1   myProgressBar.move(10,10);
\par \tab \tab \hich\af1\dbch\af11\loch\f1   myPr\hich\af1\dbch\af11\loch\f1 ogressBar.direction = ProgressBarDirection.LEFT;
\par \hich\af1\dbch\af11\loch\f1 //\tab \tab   myProgressBar.source = loader;
\par \tab \tab \hich\af1\dbch\af11\loch\f1   myProgressBar.addEventListener(ProgressEvent.PROGRESS, progressHandler);
\par \hich\af1\dbch\af11\loch\f1           myProgressBar.addEventListener(Event.COMPLETE, completeHandler);\tab \tab \tab 
\par \tab \tab \hich\af1\dbch\af11\loch\f1   addChild(my\hich\af1\dbch\af11\loch\f1 ProgressBar);
\par \tab \tab \hich\af1\dbch\af11\loch\f1   
\par \tab \tab \hich\af1\dbch\af11\loch\f1   //var myLabel:Label = new Label();
\par \tab \tab \hich\af1\dbch\af11\loch\f1   myLabel = new Label();      
\par \tab \tab \hich\af1\dbch\af11\loch\f1   myLabel.text = "xx";
\par \tab \tab \hich\af1\dbch\af11\loch\f1   myLabel.autoSize = TextFieldAutoSize.LEFT;
\par \tab \tab \hich\af1\dbch\af11\loch\f1   myLabel.move(myProgressBar.x, myProgressBar.y + myProgressBar.height);
\par \tab \tab \hich\af1\dbch\af11\loch\f1   addChild(myLab\hich\af1\dbch\af11\loch\f1 el);
\par \hich\af1\dbch\af11\loch\f1 /*
\par \tab \tab \hich\af1\dbch\af11\loch\f1   var t:Timer = new Timer(150);
\par \tab \tab \hich\af1\dbch\af11\loch\f1   t.addEventListener(TimerEvent.TIMER, timerHandler);
\par \tab \tab \hich\af1\dbch\af11\loch\f1   t.start();
\par \tab \tab \tab 
\par \tab \tab \hich\af1\dbch\af11\loch\f1   function timerHandler(event:TimerEvent):void \{
\par \tab \tab \tab \hich\af1\dbch\af11\loch\f1 myProgressBar.setProgress(myProgressBar.value + 1, myProgressBar.maximum);
\par \tab \tab \tab \hich\af1\dbch\af11\loch\f1 if (myP\hich\af1\dbch\af11\loch\f1 rogressBar.percentComplete == 100) \{
\par \tab \tab \tab \tab \hich\af1\dbch\af11\loch\f1 myProgressBar.setProgress(0, myProgressBar.maximum);
\par \tab \tab \tab \}
\par \tab \tab \tab \hich\af1\dbch\af11\loch\f1 myLabel.text = int(myProgressBar.value) + " of " + int(myProgressBar.maximum) + " (" + int(myProgressBar.percentComplete) + "%)";
\par \tab \tab \hich\af1\dbch\af11\loch\f1   \}
\par \hich\af1\dbch\af11\loch\f1 */
\par \tab \tab \hich\af1\dbch\af11\loch\f1   var picLoader:Loader = new Loader();
\par \tab \tab \hich\af1\dbch\af11\loch\f1 //  myUILoader = new UILoader();
\par \tab \tab \hich\af1\dbch\af11\loch\f1   
\par \tab \tab \hich\af1\dbch\af11\loch\f1   //var i:int=1;\tab \tab   
\par \tab \tab \hich\af1\dbch\af11\loch\f1   //note: i starts at 1
\par \tab \tab \hich\af1\dbch\af11\loch\f1   for(var i:int=0; i<maxAnimationFrame; i++) \{
\par \tab \tab \tab \hich\af1\dbch\af11\loch\f1   //var picLoader:URLLoader = new URLLoader();
\par \tab \tab \tab \hich\af1\dbch\af11\loch\f1   var picURL:String = "res\hich\af1\dbch\af11\loch\f1 /sprite_"+padNumber(i)+".png";
\par \tab \tab \tab \hich\af1\dbch\af11\loch\f1 /*  var picURLRequest:URLRequest = new URLRequest(picURL);
\par \tab \tab \tab \hich\af1\dbch\af11\loch\f1   picLoader.load(picURLRequest);
\par \tab \tab \tab \hich\af1\dbch\af11\loch\f1   picLoader.visible=false;
\par \tab \tab \tab \hich\af1\dbch\af11\loch\f1   //picLoader.contentLoaderInfo.addEventListener(Event.COMPLETE, advancePreloader);
\par \tab \tab \tab \hich\af1\dbch\af11\loch\f1   myCon\hich\af1\dbch\af11\loch\f1 tainer.addChild(picLoader);\tab \tab \tab   
\par \tab \tab \tab \hich\af1\dbch\af11\loch\f1   //trace(picURL);
\par \tab \tab \tab \hich\af1\dbch\af11\loch\f1 */
\par \tab \tab \tab \hich\af1\dbch\af11\loch\f1 var myUILoader:UILoader = new UILoader();
\par \tab \tab \tab \hich\af1\dbch\af11\loch\f1 myUILoader.autoLoad = false;
\par \tab \tab \tab \hich\af1\dbch\af11\loch\f1 myUILoader.source = picURL;
\par \tab \tab \tab \hich\af1\dbch\af11\loch\f1 myUILoader.move(10, 10);
\par \tab \tab \tab \hich\af1\dbch\af11\loch\f1 myUILoader.scaleContent = false;
\par \tab \tab \tab \hich\af1\dbch\af11\loch\f1 myUILoader.load();
\par \tab \tab \tab \hich\af1\dbch\af11\loch\f1 myUILoader.visible=false;
\par \tab \tab \tab \hich\af1\dbch\af11\loch\f1 myContainer.addChild(myUILoader);
\par \tab \tab \tab \hich\af1\dbch\af11\loch\f1 myProgressBar.source = myUILoader;//picLoader;\tab \tab 
\par \tab \tab \tab \hich\af1\dbch\af11\loch\f1   
\par \tab \tab \tab \hich\af1\dbch\af11\loch\f1 //trace(i);\tab \tab \tab   
\par \tab \tab \hich\af1\dbch\af11\loch\f1   \}  \tab \tab \tab   
\par 
\par 
\par \hich\af1\dbch\af11\loch\f1 //extra functions to monitor progress\tab \tab 
\par \tab \tab \hich\af1\dbch\af11\loch\f1 function progressHandler(event:ProgressEvent):void \{
\par \tab \tab \tab \hich\af1\dbch\af11\loch\f1 trace("progress:", event.bytesLoaded, event.bytesTotal, int(event.currentTarget.percentComplete) + "%");
\par \tab \tab \tab \hich\af1\dbch\af11\loch\f1 myLabel.text = event.bytesLoaded + " of " + event.bytesTotal + " bytes loaded.";
\par \tab \tab \}
\par \tab \tab 
\par \tab \tab \hich\af1\dbch\af11\loch\f1 function completeHandler(event:Event):void \{
\par \tab \tab \tab \hich\af1\dbch\af11\loch\f1 trace("com\hich\af1\dbch\af11\loch\f1 plete:");\tab \tab \tab 
\par \tab \tab \tab 
\par \tab \tab \tab \hich\af1\dbch\af11\loch\f1 myProgressBar.removeEventListener(ProgressEvent.PROGRESS, progressHandler);
\par \tab \tab \tab \hich\af1\dbch\af11\loch\f1 myProgressBar.removeEventListener(Event.COMPLETE, completeHandler);
\par \tab \tab \tab \hich\af1\dbch\af11\loch\f1 removeChild(myProgressBar);
\par \tab \tab \tab \hich\af1\dbch\af11\loch\f1 removeChild(myLabel);
\par \tab \tab \tab 
\par \tab \tab \tab \hich\af1\dbch\af11\loch\f1 //myContainer.addChild(myU\hich\af1\dbch\af11\loch\f1 ILoader);
\par \tab \tab \tab \hich\af1\dbch\af11\loch\f1 //addChild(myUILoader);
\par \tab \tab \}
\par 
\par \hich\af1\dbch\af11\loch\f1 //just for clarity in image labeling, add a 0 for numbers between 0 and 10, therefore 01, 02, 03. and then retain the number for 10, 11, 12
\par \tab \tab \hich\af1\dbch\af11\loch\f1 public function padNumber(num:int):String
\par \tab \tab \{
\par \tab \tab \tab \hich\af1\dbch\af11\loch\f1 if (num<10)
\par \tab \tab \tab \tab \hich\af1\dbch\af11\loch\f1 return \hich\af1\dbch\af11\loch\f1 "0"+num;
\par \tab \tab \tab \hich\af1\dbch\af11\loch\f1 else return num.toString(10);
\par \tab \tab \}
\par \tab \}\tab 
\par \}
\par }\pard \ql \li0\ri-1440\nowidctlpar\tx10080\faauto\rin-1440\lin0\itap0 {\f1\fs20\insrsid15038995 
\par 
\par \hich\af1\dbch\af11\loch\f1 -----------------------------------------------------
\par \hich\af1\dbch\af11\loch\f1 //to do a random
\par \hich\af1\dbch\af11\loch\f1 currType = Math.floor(Math.random()*MAX_TYPES);
\par \hich\af1\dbch\af11\loch\f1 //if MAX_TYPES is 5, this randoms from 0 to 4
\par 
\par \hich\af1\dbch\af11\loch\f1 -----------------------------------------------------
\par \hich\af1\dbch\af11\loch\f1 //possible width and height 30x30
\par \hich\af1\dbch\af11\loch\f1 //to put the cursor on top of everthing
\par \hich\af1\dbch\af11\loch\f1 myCursor.update(mouseX,mouseY); 
\par }{\f1\fs20\insrsid15038995 
\par }{\f1\fs20\insrsid15038995 \hich\af1\dbch\af11\loch\f1 //make sure that myCursor is always on top of everything
\par \hich\af1\dbch\af11\loch\f1 setChildIndex(myCursor,this.numC\hich\af1\dbch\af11\loch\f1 hildren-1);
\par 
\par \hich\af1\dbch\af11\loch\f1 //note: remember to put this code in the contructor of your cursor to ensure that the mouse cursor removes the mouse so you can replace it with your own cursor, and allow it to still click objects
\par \hich\af1\dbch\af11\loch\f1 Mouse.hide();
\par \hich\af1\dbch\af11\loch\f1 this.mouseEnabled=false;\tab 
\par }}